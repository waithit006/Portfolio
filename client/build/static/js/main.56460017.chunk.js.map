{"version":3,"sources":["components/layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","role","aria-label","href","src","width","height","alt","aria-expanded","data-target","aria-hidden","id","App","console","log","process","layout_Navbar","class","poster","playsinline","autoplay","muted","loop","type","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56460017.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n           <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n  <div className=\"navbar-brand\">\r\n    <a className=\"navbar-item\" href=\"https://bulma.io\">\r\n      <img src={\"https://bulma.io/images/bulma-logo.png\"} width=\"112\" height=\"28\" alt=\"\"/>\r\n    </a>\r\n\r\n    <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n      <span aria-hidden=\"true\"></span>\r\n      <span aria-hidden=\"true\"></span>\r\n      <span aria-hidden=\"true\"></span>\r\n    </a>\r\n  </div>\r\n\r\n  <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n    <div className=\"navbar-start\">\r\n      <a className=\"navbar-item\">\r\n        Home\r\n      </a>\r\n\r\n      <a className=\"navbar-item\">\r\n        Documentation\r\n      </a>\r\n\r\n      <div className=\"navbar-item has-dropdown is-hoverable\">\r\n        <a className=\"navbar-link\">\r\n          More\r\n        </a>\r\n\r\n        <div className=\"navbar-dropdown\">\r\n          <a className=\"navbar-item\">\r\n            About\r\n          </a>\r\n          <a className=\"navbar-item\">\r\n            Jobs\r\n          </a>\r\n          <a className=\"navbar-item\">\r\n            Contact\r\n          </a>\r\n          <hr className=\"navbar-divider\" />\r\n          <a className=\"navbar-item\">\r\n            Report an issue\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"navbar-end\">\r\n      <div className=\"navbar-item\">\r\n        <div className=\"buttons\">\r\n          <a className=\"button is-primary\">\r\n            <strong>Sign up</strong>\r\n          </a>\r\n          <a className=\"button is-light\">\r\n            Log in\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav> \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport './index.sass';\nimport Navbar from './components/layout/Navbar';\n\nconst App = () => {\n  console.log(process.env.PUBLIC_URL)\n  return (\n    <div className=\"container-fluid\">\n       <Navbar />\n       <section class=\"hero is-fullheight video\">\n    <div class=\"hero-video\">\n        <video poster=\"img/bgimg.jpg\" id=\"bgvid\" playsinline autoplay muted loop>\n            {/* <source src=\"vid/BGvid.webm\" type=\"video/webm\"/> */}\n            <source src={process.env.PUBLIC_URL + '/Love-Coding.mp4'} type=\"video/mp4\"/>\n        </video>\n    </div>\n    <div class=\"hero-body\">\n        <div class=\"container\">\n            // Text content goes here (h1 and call to action etc...)\n        </div>\n    </div>\n    <div class=\"hero-foot\">\n        <div class=\"has-text-centered\">\n            // Scroll down arrow here?\n        </div>\n    </div>\n</section>\n       <section className=\"hero is-link is-fullheight\">\n  <div className=\"hero-body\">\n    <div className=\"container\">\n    <div className=\"timeline is-centered\">\n  <header className=\"timeline-header\">\n    <span className=\"tag is-medium is-primary\">Start</span>\n  </header>\n  <div className=\"timeline-item is-primary\">\n    <div className=\"timeline-marker is-primary\"></div>\n    <div className=\"timeline-content\">\n      <p className=\"heading\">January 2016</p>\n      <p>Timeline content - Can include any HTML element</p>\n    </div>\n  </div>\n  <div className=\"timeline-item is-warning\">\n    <div className=\"timeline-marker is-warning is-image is-32x32\">\n      <img src=\"http://bulma.io/images/placeholders/32x32.png\"/>\n    </div>\n    <div className=\"timeline-content\">\n      <p className=\"heading\">February 2016</p>\n      <p>Timeline content - Can include any HTML element</p>\n    </div>\n  </div>\n  <header className=\"timeline-header\">\n    <span className=\"tag is-primary\">2017</span>\n  </header>\n  <div className=\"timeline-item is-danger\">\n    <div className=\"timeline-marker is-danger is-icon\">\n      <i className=\"fa fa-flag\"></i>\n    </div>\n    <div className=\"timeline-content\">\n      <p className=\"heading\">March 2017</p>\n      <p>Timeline content - Can include any HTML element</p>\n    </div>\n  </div>\n  <header className=\"timeline-header\">\n    <span className=\"tag is-medium is-primary\">End</span>\n  </header>\n</div>\n    </div>\n  </div>\n</section>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}